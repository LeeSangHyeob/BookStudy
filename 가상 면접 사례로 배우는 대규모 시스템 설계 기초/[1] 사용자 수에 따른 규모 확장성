1. 규모 확장 시 고려할 점
  1) 서버
    (1) 수직적 확장 (스케일 업)
      - 고사양의 CPU, RAM 을 추가하는 등 단순한 방법
      - 트래픽이 적을 때 좋은 선택
      - 무한대의 확장 불가
      - 장애 발생 시 완전 중단
      
    (2) 수평적 확장 (스케일 아웃)
      - 서버 추가하여 성능을 개선
      - 대규모 애플리케이션 지원에 적절
      - 비용적인 부분을 고려해야 함
      
      
  2) 데이터베이스
    (1) 관계형 VS 비관계형
      - 많은 양의 데이터를 저장하며 빠른 응답시간, 비정형 데이터일 경우
        비관계형 DBMS 고려
        
    (2) 데이터베이스 다중화의 장점
      - 병렬로 처리될 수 있는 쿼리 증가
      - 안전성 및 가용성 보장
  
  
  3) 로드밸런서
    - 부하를 고르게 분산하는 역할을 하며, L4 스위치가 대표적
    - 공개 IP로 들어온 트래픽을 사설 IP를 이용해 웹서버에 접속
  
  
  4) 캐시
    (1) 주도형 캐시 전략
      - 캐시에 저장된 응답이 있다면 해당 캐시를 반환
      - 캐시에 저장된 응답이 없다면 데이터를 찾아 저한 후 응답 반환
      
    (2) 캐시 사용 유의점
      - 갱신이 자주 일어나지 않아야 함
      - 휘발성이기 때문에 영속적이지 않은 데이터에 적합
      - 만료 정책 및 방출 정책을 마련하는 것이 바람직함
      - 캐시 메모리의 적당한 할당
      
      
  5)  콘텐츠 전송 네트워크 (CDN)
    
