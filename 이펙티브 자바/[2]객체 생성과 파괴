Item1. 생성자 대신 정적 팩토리 메서드를 고려하라
1. 정적 팩토리 메서드 패턴의 장점
  1) 메서드명을 통해 생성되는 객체를 직관적으로 표현
  2) 인스턴스의 생성을 통제할 수 있음 (싱글톤 패턴 등)
  3) 
  
2. Flyweight 패턴
  1) 자주 사용하는 객체를 Factory 에 생성해놓고 가져다 사용하는 패턴
   
3. 인터페이스에 정적 메서드 정의 가능 (Java 8 이후)
  1) 기존에는 인터페이스를 선언 후 클래스 implement 를 통해 구현
  2) 인터페이스에서 default, static 선언을 통해 메서드를 정의할 수 있음
  
4. 서비스 제공자 프레임워크
  1) 서비스 제공자 인터페이스(SPI) 와 서비스 제공자, 서비스 제공자 등록 API, 서비스 접근 API 등으로 구성
  2)
  
5. 리플렉션
  1) 클래스 로더를 통해 읽어들인 클래스 정보를 

6. 인스턴스를 만드는 방법
  1) Class.forName 을 통해 클래스를 호출
  2) Constructor 를 통해 클래스를 생성 (
  3) Constructor.newInstance 를 통해 클래스 선언
